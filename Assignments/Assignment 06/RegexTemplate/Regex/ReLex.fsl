{
module ReLex

open Microsoft.FSharp.Text.Lexing
open RePar

let lexemeAsString lexbuf =
    LexBuffer<char>.LexemeString lexbuf

let keyword s =
    match s with
     | _       -> CHAR s
}

rule Token = parse
   | [' ' '\t' '\r']         { Token lexbuf }
   | '\n'                    { lexbuf.EndPos <- lexbuf.EndPos.NextLine; Token lexbuf }
   | "eps"                   { EPS  }
   | ['a'-'z''A'-'Z''0'-'9'] { CHAR (System.Char.Parse (lexemeAsString lexbuf)) }
   | '('                     { LPAR }
   | ')'                     { RPAR }
   | '*'                     { STAR }
   | '|'                     { OR }
   | eof                     { EOF }
   | _                       { failwith "Lexer error: illegal symbol" }
