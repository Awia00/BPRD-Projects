%{
 open Absyn;
%}

%token <char> CHAR

%token STAR CHOICE
%token EPS
%token LPAR RPAR 
%token EOF

%left EOF EPS              /* lowest precedence  */
%left STAR CHOICE 
%left LPAR RPAR            /* highest precedence  */


%start Main
%type <Absyn.re> Main Re

%%

Main:
  Re EOF                                { $1                     }
;

Re:
    Res                                 { $1                     }
  | CHAR                                { Char($1)               }
  | EPS                                 { Eps                    }
  | Re STAR                             { Star($1)               }
  | Re CHOICE Re                        { Choice($1, $3)         }
  | LPAR Re RPAR                        { Seq($2, Eps)           }
;

Res:
    Re Re                               { Seq($1, $2)            }
;
